<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.midas2018.root.repository.UserMapper">
  <sql id="UserVOColumns">
          user.id
        ,	user.name
        , user.email
        ,	user.created_time
        ,	user.updated_time
        ,	user.deleted_time
        ,	user.department
        ,	user.sub_department
        ,	user.phone_number
        ,	user.status
      </sql>

  <insert id="signup" parameterType="com.midas2018.root.model.User">
        INSERT INTO
        user(id, name, email, password, department, sub_department, phone_number, status, created_time, updated_time)
        value(#{id}, #{name}, #{email}, #{password}, #{department}, #{subDepartment}, #{phoneNumber}, #{status}, NOW(), NOW())
    </insert>

  <select id="selectUserStatusByUserId" parameterType="map" resultType="com.midas2018.root.model.UserStatus">
        SELECT
          `status`
        FROM
          user
        WHERE
          id = #{id}
    </select>
  <select id="selectUserListAll" resultType="com.midas2018.root.model.UserVO">
    SELECT
     <include refid="UserVOColumns" />
    FROM
      user
    ORDER BY
      created_time DESC;
  </select>
  <select id="signin" parameterType="map" resultType="com.midas2018.root.model.UserVO">
        SELECT
          <include refid="UserVOColumns" />
        FROM
          user
        WHERE
          email = #{email}
        AND password = #{password}
        AND status != 3
    </select>

    <select id="selectUserByEmail" parameterType="map" resultType="com.midas2018.root.model.UserVO">
        SELECT
          <include refid="UserVOColumns" />
        FROM
          user
        WHERE email = #{email}
    </select>

    <update id="updateUser" parameterType="map">
      UPDATE
        user
      SET
        name = #{name}
        , email = #{email}
        , phone_number = #{phoneNumber}
        , status = #{status}
        , updated_time = NOW()
      WHERE
        id = #{id}
    </update>

    <update id="deleteUser" parameterType="map">
      UPDATE
        user
      SET
        status = #{status}
        , updated_time = NOW()
        , deleted_time = NOW()
      WHERE
        id = #{id}
    </update>


</mapper>
